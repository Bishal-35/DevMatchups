name: Sync Labels from Issues to PRs

on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize

jobs:
  sync-labels:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install @actions/github @actions/core

      - name: Sync Labels from Linked Issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          node <<EOF
          const { getInput, setFailed } = require('@actions/core');
          const { context, getOctokit } = require('@actions/github');

          const token = process.env.GITHUB_TOKEN;
          const octokit = getOctokit(token);

          async function syncLabels() {
            const { pull_request } = context.payload;

            // Get PR body
            const prBody = pull_request.body;

            // Match the issue number (e.g., "Fixes #123")
            const issueRegex = /#(\d+)/;
            const issueMatch = prBody.match(issueRegex);

            if (!issueMatch) {
              console.log("No linked issue found in the PR body.");
              return;
            }

            const issueNumber = issueMatch[1];
            const { owner, repo } = context.repo;

            // Get labels from the linked issue
            const { data: issue } = await octokit.rest.issues.get({
              owner,
              repo,
              issue_number: issueNumber,
            });

            const issueLabels = issue.labels.map((label) => label.name);

            // Apply labels to the PR
            await octokit.rest.issues.addLabels({
              owner,
              repo,
              issue_number: pull_request.number,
              labels: issueLabels,
            });

            console.log(`Applied labels: ${issueLabels.join(", ")}`);
          }

          syncLabels().catch((error) => {
            console.error(error);
            setFailed(error.message);
          });
          EOF
